import java.lang.reflect.Array;
import java.util.ArrayList;

public class Apl {

	private static int aantalGetallen = 1000;
	private static int[] heleGetallen;
	private static ArrayList<Integer> gesorteerdeLijst = new ArrayList<Integer>(aantalGetallen);
	
	public static void main(String[] args) {
			
			heleGetallen = new int[aantalGetallen];
			gesorteerdeLijst = new ArrayList<Integer>(aantalGetallen);
			
			heleGetallen = vulArray(heleGetallen);
			
			for(int j = 0; j < aantalGetallen; j++) {
				gesorteerdeLijst.add(0);
			}
		
			opdracht1(heleGetallen);
			
			opdracht2();

		
//		System.out.println(gesorteerdeLijst.toString());
//		for (int i = 0; i < heleGetallen.length; i++) {
//			System.out.print(heleGetallen[i] + ", ");
//		}
	}

	/**
	 * Methode voor het vullen van de array met willekeurige hele getallen.
	 */
	public static int[] vulArray(int[] array) {
		for (int i = 0; i < aantalGetallen; i++) {

			// random getal tussen 0 en 100
			int getal = randInt(0, 100);

			array[i] = getal;
		}
		return array;
	}

	/**
	 * Methode voor het genereren van een radom getal tussen twee grenzen.
	 * @param min - ondergrens
	 * @param max - bovengrens
	 * @return het gegenereerde random getal
	 */
	public static int randInt(int min, int max) {
		assert min < max : "Het maximum is kleiner dan het minimum";
		
		return min + (int) (Math.random() * max);
	}
	
	public static void opdracht1(int[] array) {
		Thread is = new InsertionSort(array, gesorteerdeLijst);
		is.start();
	}
	
	public static void opdracht2() {
		
		int[] a1 = new int[aantalGetallen/2];
		int[] a2 = new int[aantalGetallen/2];
		a2 = vulArray(a2);
		a1 = vulArray(a1);
		
		ArrayList<Integer> list1 = new ArrayList<Integer>();
		ArrayList<Integer> list2 = new ArrayList<Integer>();
		
		
		
		Thread t1 = new InsertionSort(a1, list1);
		t1.start();
		
		Thread t2 = new InsertionSort(a2, list2);
		t2.start();
		
	}
	
	public static void opdracht3() {
		
	}
	
	public static void opdracht4() {
		
	}
	
}
